{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","console","log","target","value","backgroundColor","rows","newText","toUpperCase","newText1","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","About","mystyle","setMyStyle","btntext","setBtntext","prototyper","PropTypes","string","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setAlert","showAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.18036f76.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand \" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" to=\"/about\">About</Link>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n                            <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                        {/* <form className=\"d-flex mx-2\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nNavbar.prototyper = {\r\n    title: PropTypes.string,\r\n}","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n        console.log(\"Uppercase was clicked : \" + text)\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n       ;\r\n    }\r\n    const handleDownClick =()=>{\r\n        console.log(\"LowerCase was Clicked : \"+ text)\r\n        let newText1 = text.toLowerCase()\r\n        setText(newText1)\r\n       \r\n    }\r\n    const handleCopy = ()=>{\r\n        console.log(\"copied\");\r\n        var text= document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        \r\n    }\r\n    const removeExtraSpace = ()=>{\r\n        console.log(\"removed extra space\")\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        \r\n    }\r\n    const  handleClear =()=>{\r\n        let newText2 = '';\r\n        setText(newText2);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const handleOnChange =(event)=>{\r\n        console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    const [text ,setText]= useState(\"\")\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1 className=\"my-4\">{props.heading}</h1>\r\n\r\n            <div className=\"mb-4\" >\r\n                <textarea className=\"form-control\" onChange={handleOnChange} value={text} style={{backgroundColor:props.mode==='dark'?'#353b45ba':'white', color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>  \r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleDownClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={removeExtraSpace} >Remove Extra Space</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy} id=\"mybox\">Copy Text</button>\r\n            <button className=\"btn btn-success mx-1 my-1\" onClick={handleClear} id=\"mybox\">Clear Text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\"style={{color:props.mode==='dark'?'white':'black'}}  >\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n            <p> {0.008 *text.split(\" \").length-0.008 } minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the text-box above to preview it here \"}</p>\r\n        </div>\r\n        <hr />\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function About() {\r\n\r\n    const [mystyle, setMyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const [btntext, setBtntext] = useState(\"Dark  Mode\")\r\n\r\n    const togglestyle = () => {\r\n        if (mystyle.color === 'black') {\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n\r\n            })\r\n            setBtntext(\"Light Mode\")\r\n        }\r\n        else {\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white',\r\n\r\n            })\r\n            setBtntext('Dark Mode')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container  \" style={mystyle}>\r\n            <h1 className=\"my-3\">About </h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" >\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            About Text-Editor\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>Text-Editor is designed using <strong> <code> React Js </code> </strong>  which is a single page application .</strong> The idea of designing these kind of application was to deliver text utils which are required in day to day life in the world of Electronics Devices .\r\n                            In these application user can edit it text into text action such as \r\n                           <li>UpperCase </li>\r\n                           <li>LowerCase </li>\r\n                           <li>Remove Space</li>\r\n                           <li>Copy</li>\r\n                           And even dark mode and light mode is also provided.\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            My Introduction\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>Hello ! My name is <strong><code >MANISH SANTOSH PAWADE </code></strong></strong>. I had completed my certifcation in Java Full Stack Development at <a  href=\"http://www.codekul.com/\">CODEKUL PUNE</a> .\r\n                            <p>I am familiar with technologies such as \r\n                                <li>Front-End : Html , Css , JavaScript , React Js</li>\r\n                         <li>Back-End  : Core Java , Spring Boot , github , postman api ,Mysql </li>\r\n                         I had completed my graduation in BE form (Sant Gadge Baba Amravati University) in 2020. \r\n                                \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                           Other Projects\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong> <ol><li> Gym Fitness Website</li></ol>  </strong>\r\n                            <p> It is an dynamic demo website designed using pure html , css , javascript . As user point he would find all the important and essentials information which a person searches in the gym such as equipments ,gym trainers , space and many more .  \r\n                                It's not completly ready to deploy but designing part is almost done  which I would like to showcase through source\r\n                             </p>\r\n                             <a href=\"https://github.com/Manishpawade/Gym-Project\">Source Code</a>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <button type=\"button\" onClick={togglestyle} className='btn btn-success '>{btntext}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n        props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg} \r\n           \r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport { BrowserRouter as Router, Switch, Route,} from \"react-router-dom\";\nimport Alert from './components/Alert';\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1900);\n\n  }\n\n  const toogleMode = () => {\n    if (mode === 'dark') {\n      setmode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\")\n\n    } else {\n      setmode('dark')\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode has been enabled\", \"success\")\n\n    }\n  }\n  return (\n    <>\n      <Router>\n      <Navbar title=\"Text-Editor\" mode={mode} toogleMode={toogleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\" >\n        <Switch> \n         <Route exact path=\"/about\">\n              <About/> \n            </Route>\n        <Route exact path=\"\">\n        <TextForm showAlert={showAlert} heading=\"Enter your text here to edit/anlyze\" mode={mode} />\n         </Route> \n       </Switch> \n      </div>\n       </Router> \n        <div className=\" container my-5\">\n        \n          </div> \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}